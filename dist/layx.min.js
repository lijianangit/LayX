(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["layx"] = factory();
	else
		root["layx"] = factory();
})(window, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/app/control/control.ts":
/*!************************************!*\
  !*** ./src/app/control/control.ts ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Control = (function () {
    function Control(options) {
        this.symbol = Symbol("monksoul");
        this.handlerOptions(options);
    }
    return Control;
}());
exports.default = Control;


/***/ }),

/***/ "./src/app/control/window/ui-window.ts":
/*!*********************************************!*\
  !*** ./src/app/control/window/ui-window.ts ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var control_1 = __webpack_require__(/*! ../control */ "./src/app/control/control.ts");
var property_validator_1 = __webpack_require__(/*! ../../core/validator/property-validator */ "./src/app/core/validator/property-validator.ts");
var UIWindow = (function (_super) {
    __extends(UIWindow, _super);
    function UIWindow(options) {
        var _a, _b;
        var _this = _super.call(this, options) || this;
        _this.width = 800;
        _this.height = 600;
        _this.id = (_b = (_a = options) === null || _a === void 0 ? void 0 : _a.id, (_b !== null && _b !== void 0 ? _b : ""));
        return _this;
    }
    UIWindow.prototype.present = function () {
        var element = document.createElement("div");
        element.id = this.id;
        return element;
    };
    UIWindow.prototype.handlerOptions = function (options) {
    };
    __decorate([
        property_validator_1.noEmptyOrNull()
    ], UIWindow.prototype, "id", void 0);
    __decorate([
        property_validator_1.isNumber(false)
    ], UIWindow.prototype, "width", void 0);
    __decorate([
        property_validator_1.isNumber(false)
    ], UIWindow.prototype, "height", void 0);
    return UIWindow;
}(control_1.default));
exports.default = UIWindow;


/***/ }),

/***/ "./src/app/core/exception/exception.ts":
/*!*********************************************!*\
  !*** ./src/app/core/exception/exception.ts ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function error(message) {
    throw new Error("\n\u7C7B\u578B\uFF1A\u7A0B\u5E8F\u5F02\u5E38\n\u5F02\u5E38\u4FE1\u606F\uFF1A" + message + "\n\u5806\u6808\u4FE1\u606F\uFF1A");
}
exports.error = error;
function validateFail(message) {
    throw new Error("\n\u7C7B\u578B\uFF1A\u9A8C\u8BC1\u9519\u8BEF\n\u9519\u8BEF\u4FE1\u606F\uFF1A" + message + "\n\u5806\u6808\u4FE1\u606F\uFF1A");
}
exports.validateFail = validateFail;


/***/ }),

/***/ "./src/app/core/validator/base-validator.ts":
/*!**************************************************!*\
  !*** ./src/app/core/validator/base-validator.ts ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var exception_1 = __webpack_require__(/*! ../exception/exception */ "./src/app/core/exception/exception.ts");
function baseTypeValidator(value, type) {
    var cnType = "";
    switch (type) {
        case "number":
            cnType = "数字";
            break;
        case "string":
            cnType = "字符串";
            break;
        case "function":
            cnType = "函数";
            break;
        case "array":
            cnType = "数组";
            break;
        default: exception_1.error("存在未识别基础类型");
    }
    if ((type !== "array" && typeof value !== type) ||
        (type === "array" && !Array.isArray(value))) {
        exception_1.validateFail("`" + value + "` \u4E0D\u662F\u4E00\u4E2A\u6B63\u786E\u7684" + cnType + "\u7C7B\u578B");
    }
}
exports.baseTypeValidator = baseTypeValidator;


/***/ }),

/***/ "./src/app/core/validator/property-validator.ts":
/*!******************************************************!*\
  !*** ./src/app/core/validator/property-validator.ts ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var exception_1 = __webpack_require__(/*! ../exception/exception */ "./src/app/core/exception/exception.ts");
var base_validator_1 = __webpack_require__(/*! ./base-validator */ "./src/app/core/validator/base-validator.ts");
function propertyValidator(setHandler, typeValidator) {
    return function (target, propertyKey) {
        var value = target[propertyKey];
        Object.defineProperty(target, propertyKey, {
            get: function () { return value; },
            set: function (newValue) {
                if (typeValidator)
                    typeValidator(newValue, propertyKey);
                value = setHandler(newValue, propertyKey);
            }
        });
    };
}
function isNumber(allowMinus) {
    if (allowMinus === void 0) { allowMinus = true; }
    return propertyValidator(function (newValue) {
        if (allowMinus)
            return newValue;
        else {
            if (newValue === Math.abs(newValue))
                return newValue;
            else
                exception_1.validateFail("\u53EA\u80FD\u4F20\u5165\u6B63\u5B9E\u6570");
        }
    }, function (newValue) { return base_validator_1.baseTypeValidator(newValue, "number"); });
}
exports.isNumber = isNumber;
function min(minValue) {
    return propertyValidator(function (newValue) {
        if (newValue >= minValue)
            return newValue;
        else
            exception_1.validateFail("`" + newValue + "` \u4E0D\u80FD\u5C0F\u4E8E `" + minValue + "`");
    }, function (newValue) { return base_validator_1.baseTypeValidator(newValue, "number"); });
}
exports.min = min;
function max(maxValue) {
    return propertyValidator(function (newValue) {
        if (newValue <= maxValue)
            return newValue;
        else
            exception_1.validateFail("`" + newValue + "` \u4E0D\u80FD\u5927\u4E8E `" + maxValue + "`");
    }, function (newValue) { return base_validator_1.baseTypeValidator(newValue, "number"); });
}
exports.max = max;
function length(minValue, maxValue) {
    return propertyValidator(function (newValue) {
        var valueLength = newValue.length;
        if (valueLength >= minValue && valueLength <= maxValue)
            return newValue;
        else
            exception_1.validateFail("`" + newValue + "` \u957F\u5EA6\u4E0D\u5728 `[" + minValue + "," + maxValue + "]` \u533A\u95F4");
    }, function (newValue) { return base_validator_1.baseTypeValidator(newValue, "string"); });
}
exports.length = length;
function match(reg) {
    return propertyValidator(function (newValue) {
        if (reg.test(newValue))
            return newValue;
        else
            exception_1.validateFail("`" + newValue + "` \u4E0D\u80FD\u5339\u914D\u6B63\u5219\u8868\u8FBE\u5F0F `" + reg + "`");
    }, function (newValue) { return base_validator_1.baseTypeValidator(newValue, "string"); });
}
exports.match = match;
function options() {
    var enumValues = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        enumValues[_i] = arguments[_i];
    }
    return propertyValidator(function (newValue) {
        if (enumValues.indexOf(newValue) > -1)
            return newValue;
        else
            exception_1.validateFail("`" + newValue + "` \u4E0D\u5728\u53EF\u9009\u503C `[" + enumValues.toString() + "]` \u5185");
    });
}
exports.options = options;
function noEmptyOrNull() {
    return propertyValidator(function (newValue, propertyKey) {
        if (newValue.trim().length > 0)
            return newValue;
        else
            exception_1.validateFail("`" + propertyKey.toString() + "` \u4E0D\u5141\u8BB8\u4E3A\u7A7A\u5B57\u7B26\u6216null");
    }, function (newValue) { return base_validator_1.baseTypeValidator(newValue, "string"); });
}
exports.noEmptyOrNull = noEmptyOrNull;


/***/ }),

/***/ "./src/app/entry/entry.ts":
/*!********************************!*\
  !*** ./src/app/entry/entry.ts ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var property_validator_1 = __webpack_require__(/*! ../core/validator/property-validator */ "./src/app/core/validator/property-validator.ts");
var ui_window_1 = __webpack_require__(/*! ../control/window/ui-window */ "./src/app/control/window/ui-window.ts");
var Entry = (function () {
    function Entry(options) {
        this.version = "3.0.0";
        this.lang = "ZH_CN";
        this.handlerOptions(options);
    }
    Entry.prototype.open = function (options) {
        var uiWindow = new ui_window_1.default(options);
        return uiWindow.present();
    };
    Entry.getInstance = function (options) {
        if (options === void 0) { options = {}; }
        if (!this.instance) {
            this.instance = new Entry(options);
        }
        else {
            this.instance.handlerOptions(options);
        }
        return this.instance;
    };
    Entry.prototype.handlerOptions = function (options) {
        this.lang = options.lang || "ZH_CN";
    };
    __decorate([
        property_validator_1.options("ZH_CN", "EN_US")
    ], Entry.prototype, "lang", void 0);
    return Entry;
}());
exports.default = Entry;


/***/ }),

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var entry_1 = __webpack_require__(/*! ./app/entry/entry */ "./src/app/entry/entry.ts");
function overt() {
    var entry = entry_1.default.getInstance();
    var entryOvert = function (options) {
        entry_1.default.getInstance(options);
    };
    entryOvert.version = entry.version;
    entryOvert.open = entry.open;
    return entryOvert;
}
exports.default = overt();


/***/ })

/******/ })["default"];
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sYXl4L3dlYnBhY2svdW5pdmVyc2FsTW9kdWxlRGVmaW5pdGlvbiIsIndlYnBhY2s6Ly9sYXl4L3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL2xheXgvLi9zcmMvYXBwL2NvbnRyb2wvY29udHJvbC50cyIsIndlYnBhY2s6Ly9sYXl4Ly4vc3JjL2FwcC9jb250cm9sL3dpbmRvdy91aS13aW5kb3cudHMiLCJ3ZWJwYWNrOi8vbGF5eC8uL3NyYy9hcHAvY29yZS9leGNlcHRpb24vZXhjZXB0aW9uLnRzIiwid2VicGFjazovL2xheXgvLi9zcmMvYXBwL2NvcmUvdmFsaWRhdG9yL2Jhc2UtdmFsaWRhdG9yLnRzIiwid2VicGFjazovL2xheXgvLi9zcmMvYXBwL2NvcmUvdmFsaWRhdG9yL3Byb3BlcnR5LXZhbGlkYXRvci50cyIsIndlYnBhY2s6Ly9sYXl4Ly4vc3JjL2FwcC9lbnRyeS9lbnRyeS50cyIsIndlYnBhY2s6Ly9sYXl4Ly4vc3JjL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCxPO1FDVkE7UUFDQTs7UUFFQTtRQUNBOztRQUVBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBOztRQUVBO1FBQ0E7O1FBRUE7UUFDQTs7UUFFQTtRQUNBO1FBQ0E7OztRQUdBO1FBQ0E7O1FBRUE7UUFDQTs7UUFFQTtRQUNBO1FBQ0E7UUFDQSwwQ0FBMEMsZ0NBQWdDO1FBQzFFO1FBQ0E7O1FBRUE7UUFDQTtRQUNBO1FBQ0Esd0RBQXdELGtCQUFrQjtRQUMxRTtRQUNBLGlEQUFpRCxjQUFjO1FBQy9EOztRQUVBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQSx5Q0FBeUMsaUNBQWlDO1FBQzFFLGdIQUFnSCxtQkFBbUIsRUFBRTtRQUNySTtRQUNBOztRQUVBO1FBQ0E7UUFDQTtRQUNBLDJCQUEyQiwwQkFBMEIsRUFBRTtRQUN2RCxpQ0FBaUMsZUFBZTtRQUNoRDtRQUNBO1FBQ0E7O1FBRUE7UUFDQSxzREFBc0QsK0RBQStEOztRQUVySDtRQUNBOzs7UUFHQTtRQUNBOzs7Ozs7Ozs7Ozs7Ozs7QUM5RUE7SUFVSSxpQkFBWSxPQUFnQjtRQU5wQixXQUFNLEdBQVcsTUFBTSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBT3hDLElBQUksQ0FBQyxjQUFjLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDakMsQ0FBQztJQU9MLGNBQUM7QUFBRCxDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQ3ZCRCxzRkFBaUM7QUFHakMsZ0pBQWtGO0FBS2xGO0lBQXNDLDRCQUF1QjtJQXFCekQsa0JBQVksT0FBdUI7O1FBQW5DLFlBQ0ksa0JBQU0sT0FBTyxDQUFDLFNBR2pCO1FBZk0sV0FBSyxHQUFXLEdBQUcsQ0FBQztRQU1wQixZQUFNLEdBQVcsR0FBRyxDQUFDO1FBUXhCLEtBQUksQ0FBQyxFQUFFLGVBQUcsT0FBTywwQ0FBRSxFQUFFLHVDQUFJLEVBQUUsR0FBQzs7SUFDaEMsQ0FBQztJQUtELDBCQUFPLEdBQVA7UUFDSSxJQUFNLE9BQU8sR0FBRyxRQUFRLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQzlDLE9BQU8sQ0FBQyxFQUFFLEdBQUcsSUFBSSxDQUFDLEVBQUUsQ0FBQztRQUVyQixPQUFPLE9BQU8sQ0FBQztJQUNuQixDQUFDO0lBTUQsaUNBQWMsR0FBZCxVQUFlLE9BQXVCO0lBQ3RDLENBQUM7SUFyQ0Q7UUFEQyxrQ0FBYSxFQUFFO3dDQUNXO0lBSzNCO1FBREMsNkJBQVEsQ0FBQyxLQUFLLENBQUM7MkNBQ1c7SUFNM0I7UUFEQyw2QkFBUSxDQUFDLEtBQUssQ0FBQzs0Q0FDWTtJQTJCaEMsZUFBQztDQUFBLENBM0NxQyxpQkFBTyxHQTJDNUM7a0JBM0NvQixRQUFROzs7Ozs7Ozs7Ozs7Ozs7QUNKN0IsU0FBZ0IsS0FBSyxDQUFDLE9BQWU7SUFDakMsTUFBTSxJQUFJLEtBQUssQ0FBQyxpRkFBbUIsT0FBTyxxQ0FBUyxDQUFDLENBQUM7QUFDekQsQ0FBQztBQUZELHNCQUVDO0FBTUQsU0FBZ0IsWUFBWSxDQUFDLE9BQWU7SUFDeEMsTUFBTSxJQUFJLEtBQUssQ0FBQyxpRkFBbUIsT0FBTyxxQ0FBUyxDQUFDLENBQUM7QUFDekQsQ0FBQztBQUZELG9DQUVDOzs7Ozs7Ozs7Ozs7Ozs7QUNkRCw2R0FBNkQ7QUFPN0QsU0FBZ0IsaUJBQWlCLENBQUMsS0FBVSxFQUFFLElBQWdEO0lBQzFGLElBQUksTUFBTSxHQUFXLEVBQUUsQ0FBQztJQUN4QixRQUFRLElBQUksRUFBRTtRQUNWLEtBQUssUUFBUTtZQUNULE1BQU0sR0FBRyxJQUFJLENBQUM7WUFDZCxNQUFNO1FBQ1YsS0FBSyxRQUFRO1lBQ1QsTUFBTSxHQUFHLEtBQUssQ0FBQztZQUNmLE1BQU07UUFDVixLQUFLLFVBQVU7WUFDWCxNQUFNLEdBQUcsSUFBSSxDQUFDO1lBQ2QsTUFBTTtRQUNWLEtBQUssT0FBTztZQUNSLE1BQU0sR0FBRyxJQUFJLENBQUM7WUFDZCxNQUFNO1FBQ1YsT0FBTyxDQUFDLENBQUMsaUJBQUssQ0FBQyxXQUFXLENBQUMsQ0FBQztLQUMvQjtJQUVELElBQUksQ0FBQyxJQUFJLEtBQUssT0FBTyxJQUFJLE9BQU8sS0FBSyxLQUFLLElBQUksQ0FBQztRQUMzQyxDQUFDLElBQUksS0FBSyxPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUU7UUFDN0Msd0JBQVksQ0FBQyxNQUFLLEtBQUssb0RBQWEsTUFBTSxpQkFBSSxDQUFDLENBQUM7S0FDbkQ7QUFDTCxDQUFDO0FBdEJELDhDQXNCQzs7Ozs7Ozs7Ozs7Ozs7O0FDN0JELDZHQUFxRDtBQUNyRCxpSEFBcUQ7QUFPckQsU0FBUyxpQkFBaUIsQ0FBQyxVQUF5RSxFQUFFLGFBQThFO0lBQ2hMLE9BQU8sVUFBVSxNQUFXLEVBQUUsV0FBcUM7UUFDL0QsSUFBSSxLQUFLLEdBQUcsTUFBTSxDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBQ2hDLE1BQU0sQ0FBQyxjQUFjLENBQUMsTUFBTSxFQUFFLFdBQVcsRUFBRTtZQUN2QyxHQUFHLEVBQUUsY0FBTSxZQUFLLEVBQUwsQ0FBSztZQUNoQixHQUFHLEVBQUUsVUFBQyxRQUFRO2dCQUNWLElBQUksYUFBYTtvQkFBRSxhQUFhLENBQUMsUUFBUSxFQUFFLFdBQVcsQ0FBQyxDQUFDO2dCQUV4RCxLQUFLLEdBQUcsVUFBVSxDQUFDLFFBQVEsRUFBRSxXQUFXLENBQUMsQ0FBQztZQUM5QyxDQUFDO1NBQ0osQ0FBQyxDQUFDO0lBQ1AsQ0FBQztBQUNMLENBQUM7QUFNRCxTQUFnQixRQUFRLENBQUMsVUFBMEI7SUFBMUIsOENBQTBCO0lBQy9DLE9BQU8saUJBQWlCLENBQUMsa0JBQVE7UUFDN0IsSUFBSSxVQUFVO1lBQUUsT0FBTyxRQUFRLENBQUM7YUFDM0I7WUFDRCxJQUFJLFFBQVEsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQztnQkFBRSxPQUFPLFFBQVEsQ0FBQzs7Z0JBQ2hELHdCQUFZLENBQUMsNENBQVMsQ0FBQyxDQUFDO1NBQ2hDO0lBQ0wsQ0FBQyxFQUFFLGtCQUFRLElBQUkseUNBQWlCLENBQUMsUUFBUSxFQUFFLFFBQVEsQ0FBQyxFQUFyQyxDQUFxQyxDQUFDLENBQUM7QUFDMUQsQ0FBQztBQVJELDRCQVFDO0FBTUQsU0FBZ0IsR0FBRyxDQUFDLFFBQWdCO0lBQ2hDLE9BQU8saUJBQWlCLENBQUMsa0JBQVE7UUFDN0IsSUFBSSxRQUFRLElBQUksUUFBUTtZQUFFLE9BQU8sUUFBUSxDQUFDOztZQUNyQyx3QkFBWSxDQUFDLE1BQUssUUFBUSxvQ0FBYSxRQUFRLE1BQUksQ0FBQyxDQUFDO0lBQzlELENBQUMsRUFBRSxrQkFBUSxJQUFJLHlDQUFpQixDQUFDLFFBQVEsRUFBRSxRQUFRLENBQUMsRUFBckMsQ0FBcUMsQ0FBQyxDQUFDO0FBQzFELENBQUM7QUFMRCxrQkFLQztBQU1ELFNBQWdCLEdBQUcsQ0FBQyxRQUFnQjtJQUNoQyxPQUFPLGlCQUFpQixDQUFDLGtCQUFRO1FBQzdCLElBQUksUUFBUSxJQUFJLFFBQVE7WUFBRSxPQUFPLFFBQVEsQ0FBQzs7WUFDckMsd0JBQVksQ0FBQyxNQUFLLFFBQVEsb0NBQWEsUUFBUSxNQUFJLENBQUMsQ0FBQztJQUM5RCxDQUFDLEVBQUUsa0JBQVEsSUFBSSx5Q0FBaUIsQ0FBQyxRQUFRLEVBQUUsUUFBUSxDQUFDLEVBQXJDLENBQXFDLENBQUMsQ0FBQztBQUMxRCxDQUFDO0FBTEQsa0JBS0M7QUFPRCxTQUFnQixNQUFNLENBQUMsUUFBZ0IsRUFBRSxRQUFnQjtJQUNyRCxPQUFPLGlCQUFpQixDQUFDLGtCQUFRO1FBQzdCLElBQUksV0FBVyxHQUFHLFFBQVEsQ0FBQyxNQUFNLENBQUM7UUFDbEMsSUFBSSxXQUFXLElBQUksUUFBUSxJQUFJLFdBQVcsSUFBSSxRQUFRO1lBQUUsT0FBTyxRQUFRLENBQUM7O1lBQ25FLHdCQUFZLENBQUMsTUFBSyxRQUFRLHFDQUFjLFFBQVEsU0FBSSxRQUFRLG9CQUFRLENBQUMsQ0FBQztJQUMvRSxDQUFDLEVBQUUsa0JBQVEsSUFBSSx5Q0FBaUIsQ0FBQyxRQUFRLEVBQUUsUUFBUSxDQUFDLEVBQXJDLENBQXFDLENBQUMsQ0FBQztBQUMxRCxDQUFDO0FBTkQsd0JBTUM7QUFNRCxTQUFnQixLQUFLLENBQUMsR0FBVztJQUM3QixPQUFPLGlCQUFpQixDQUFDLGtCQUFRO1FBQzdCLElBQUksR0FBRyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUM7WUFBRSxPQUFPLFFBQVEsQ0FBQzs7WUFDbkMsd0JBQVksQ0FBQyxNQUFLLFFBQVEsa0VBQWtCLEdBQUcsTUFBSSxDQUFDLENBQUM7SUFDOUQsQ0FBQyxFQUFFLGtCQUFRLElBQUkseUNBQWlCLENBQUMsUUFBUSxFQUFFLFFBQVEsQ0FBQyxFQUFyQyxDQUFxQyxDQUFDLENBQUM7QUFDMUQsQ0FBQztBQUxELHNCQUtDO0FBTUQsU0FBZ0IsT0FBTztJQUFDLG9CQUFxQztTQUFyQyxVQUFxQyxFQUFyQyxxQkFBcUMsRUFBckMsSUFBcUM7UUFBckMsK0JBQXFDOztJQUN6RCxPQUFPLGlCQUFpQixDQUFDLGtCQUFRO1FBQzdCLElBQUksVUFBVSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLENBQUM7WUFBRSxPQUFPLFFBQVEsQ0FBQzs7WUFDbEQsd0JBQVksQ0FBQyxNQUFLLFFBQVEsMkNBQWUsVUFBVSxDQUFDLFFBQVEsRUFBRSxjQUFPLENBQUMsQ0FBQztJQUNoRixDQUFDLENBQUMsQ0FBQztBQUNQLENBQUM7QUFMRCwwQkFLQztBQUtELFNBQWdCLGFBQWE7SUFDekIsT0FBTyxpQkFBaUIsQ0FBQyxVQUFDLFFBQVEsRUFBRSxXQUFXO1FBQzNDLElBQUksUUFBUSxDQUFDLElBQUksRUFBRSxDQUFDLE1BQU0sR0FBRyxDQUFDO1lBQUUsT0FBTyxRQUFRLENBQUM7O1lBQzNDLHdCQUFZLENBQUMsTUFBSyxXQUFXLENBQUMsUUFBUSxFQUFFLDJEQUFpQixDQUFDLENBQUM7SUFDcEUsQ0FBQyxFQUFFLGtCQUFRLElBQUkseUNBQWlCLENBQUMsUUFBUSxFQUFFLFFBQVEsQ0FBQyxFQUFyQyxDQUFxQyxDQUFDLENBQUM7QUFDMUQsQ0FBQztBQUxELHNDQUtDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUNuR0QsNklBQStEO0FBQy9ELGtIQUFtRDtBQU1uRDtJQWVJLGVBQW9CLE9BQXFCO1FBWHpCLFlBQU8sR0FBVyxPQUFPLENBQUM7UUFNbkMsU0FBSSxXQUEwQztRQU1qRCxJQUFJLENBQUMsY0FBYyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ2pDLENBQUM7SUFNRCxvQkFBSSxHQUFKLFVBQUssT0FBdUI7UUFDeEIsSUFBTSxRQUFRLEdBQUcsSUFBSSxtQkFBUSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQ3ZDLE9BQU8sUUFBUSxDQUFDLE9BQU8sRUFBRSxDQUFDO0lBQzlCLENBQUM7SUFVYSxpQkFBVyxHQUF6QixVQUEwQixPQUF3QztRQUF4QyxvQ0FBc0MsRUFBRTtRQUM5RCxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRTtZQUNoQixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1NBQ3RDO2FBQ0k7WUFDRCxJQUFJLENBQUMsUUFBUSxDQUFDLGNBQWMsQ0FBQyxPQUFPLENBQUMsQ0FBQztTQUN6QztRQUNELE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQztJQUN6QixDQUFDO0lBTU8sOEJBQWMsR0FBdEIsVUFBdUIsT0FBcUI7UUFDeEMsSUFBSSxDQUFDLElBQUksR0FBRyxPQUFPLENBQUMsSUFBSSxXQUF5QixDQUFDO0lBQ3RELENBQUM7SUExQ0Q7UUFEQyw0QkFBTyxrQkFBOEM7dUNBQ0Q7SUEyQ3pELFlBQUM7Q0FBQTtrQkFyRG9CLEtBQUs7Ozs7Ozs7Ozs7Ozs7OztBQ1IxQix1RkFBc0M7QUFLdEMsU0FBUyxLQUFLO0lBQ1YsSUFBTSxLQUFLLEdBQUcsZUFBSyxDQUFDLFdBQVcsRUFBRSxDQUFDO0lBRWxDLElBQU0sVUFBVSxHQUFlLFVBQVUsT0FBcUI7UUFDMUQsZUFBSyxDQUFDLFdBQVcsQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUMvQixDQUFDLENBQUM7SUFFRixVQUFVLENBQUMsT0FBTyxHQUFHLEtBQUssQ0FBQyxPQUFPLENBQUM7SUFDbkMsVUFBVSxDQUFDLElBQUksR0FBRyxLQUFLLENBQUMsSUFBSSxDQUFDO0lBRTdCLE9BQU8sVUFBVSxDQUFDO0FBQ3RCLENBQUM7QUFFRCxrQkFBZSxLQUFLLEVBQUUsQ0FBQyIsImZpbGUiOiJsYXl4Lm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiB3ZWJwYWNrVW5pdmVyc2FsTW9kdWxlRGVmaW5pdGlvbihyb290LCBmYWN0b3J5KSB7XG5cdGlmKHR5cGVvZiBleHBvcnRzID09PSAnb2JqZWN0JyAmJiB0eXBlb2YgbW9kdWxlID09PSAnb2JqZWN0Jylcblx0XHRtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkoKTtcblx0ZWxzZSBpZih0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpXG5cdFx0ZGVmaW5lKFtdLCBmYWN0b3J5KTtcblx0ZWxzZSBpZih0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcpXG5cdFx0ZXhwb3J0c1tcImxheXhcIl0gPSBmYWN0b3J5KCk7XG5cdGVsc2Vcblx0XHRyb290W1wibGF5eFwiXSA9IGZhY3RvcnkoKTtcbn0pKHdpbmRvdywgZnVuY3Rpb24oKSB7XG5yZXR1cm4gIiwiIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcblxuIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbiBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblxuIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbiBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHtcbiBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcbiBcdFx0fVxuIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4gXHRcdFx0aTogbW9kdWxlSWQsXG4gXHRcdFx0bDogZmFsc2UsXG4gXHRcdFx0ZXhwb3J0czoge31cbiBcdFx0fTtcblxuIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbiBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cbiBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuIFx0XHRtb2R1bGUubCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBuYW1lLCBnZXR0ZXIpIHtcbiBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZ2V0dGVyIH0pO1xuIFx0XHR9XG4gXHR9O1xuXG4gXHQvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSBmdW5jdGlvbihleHBvcnRzKSB7XG4gXHRcdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuIFx0XHR9XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gXHR9O1xuXG4gXHQvLyBjcmVhdGUgYSBmYWtlIG5hbWVzcGFjZSBvYmplY3RcbiBcdC8vIG1vZGUgJiAxOiB2YWx1ZSBpcyBhIG1vZHVsZSBpZCwgcmVxdWlyZSBpdFxuIFx0Ly8gbW9kZSAmIDI6IG1lcmdlIGFsbCBwcm9wZXJ0aWVzIG9mIHZhbHVlIGludG8gdGhlIG5zXG4gXHQvLyBtb2RlICYgNDogcmV0dXJuIHZhbHVlIHdoZW4gYWxyZWFkeSBucyBvYmplY3RcbiBcdC8vIG1vZGUgJiA4fDE6IGJlaGF2ZSBsaWtlIHJlcXVpcmVcbiBcdF9fd2VicGFja19yZXF1aXJlX18udCA9IGZ1bmN0aW9uKHZhbHVlLCBtb2RlKSB7XG4gXHRcdGlmKG1vZGUgJiAxKSB2YWx1ZSA9IF9fd2VicGFja19yZXF1aXJlX18odmFsdWUpO1xuIFx0XHRpZihtb2RlICYgOCkgcmV0dXJuIHZhbHVlO1xuIFx0XHRpZigobW9kZSAmIDQpICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdmFsdWUgJiYgdmFsdWUuX19lc01vZHVsZSkgcmV0dXJuIHZhbHVlO1xuIFx0XHR2YXIgbnMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIobnMpO1xuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobnMsICdkZWZhdWx0JywgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdmFsdWUgfSk7XG4gXHRcdGlmKG1vZGUgJiAyICYmIHR5cGVvZiB2YWx1ZSAhPSAnc3RyaW5nJykgZm9yKHZhciBrZXkgaW4gdmFsdWUpIF9fd2VicGFja19yZXF1aXJlX18uZChucywga2V5LCBmdW5jdGlvbihrZXkpIHsgcmV0dXJuIHZhbHVlW2tleV07IH0uYmluZChudWxsLCBrZXkpKTtcbiBcdFx0cmV0dXJuIG5zO1xuIFx0fTtcblxuIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbiBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbiBcdFx0cmV0dXJuIGdldHRlcjtcbiBcdH07XG5cbiBcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjtcblxuXG4gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbiBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKF9fd2VicGFja19yZXF1aXJlX18ucyA9IFwiLi9zcmMvaW5kZXgudHNcIik7XG4iLCIvKipcclxuICog5YWo5bGA5o6n5Lu25oq96LGh57G777yM5omA5pyJ55qE5o6n5Lu26YO95b+F6aG757un5om/6K+l5o6n5Lu257G7XHJcbiAqIEB0ZW1wbGF0ZSBUT3B0aW9uIOaOp+S7tuaUr+aMgeS8oOWFpeWPr+mAieWPguaVsFxyXG4gKi9cclxuZXhwb3J0IGRlZmF1bHQgYWJzdHJhY3QgY2xhc3MgQ29udHJvbDxUT3B0aW9uPiB7XHJcbiAgICAvKipcclxuICAgICAqIOaOp+S7tuWUr+S4gOagh+ivhlxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIHN5bWJvbDogc3ltYm9sID0gU3ltYm9sKFwibW9ua3NvdWxcIik7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDmnoTpgKDlh73mlbDliJ3lp4vljJZcclxuICAgICAqIEBwYXJhbSBvcHRpb25zIOaOp+S7tuaUr+aMgeS8oOWFpeWPr+mAieWPguaVsFxyXG4gICAgICovXHJcbiAgICBjb25zdHJ1Y3RvcihvcHRpb25zOiBUT3B0aW9uKSB7XHJcbiAgICAgICAgdGhpcy5oYW5kbGVyT3B0aW9ucyhvcHRpb25zKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOWkhOeQhuWIneWni+S8oOWFpeWPguaVsFxyXG4gICAgICogQHBhcmFtIG9wdGlvbnMg5o6n5Lu25pSv5oyB5Lyg5YWl5Y+v6YCJ5Y+C5pWwXHJcbiAgICAgKi9cclxuICAgIGFic3RyYWN0IGhhbmRsZXJPcHRpb25zKG9wdGlvbnM6IFRPcHRpb24pOiB2b2lkO1xyXG59IiwiaW1wb3J0IENvbnRyb2wgZnJvbSBcIi4uL2NvbnRyb2xcIjtcclxuaW1wb3J0IFVJQ29udHJvbCBmcm9tIFwiLi4vdWktY29udHJvbFwiO1xyXG5pbXBvcnQgeyBVSVdpbmRvd09wdGlvbiB9IGZyb20gXCIuL2NvbnN0cmFpbnRcIjtcclxuaW1wb3J0IHsgaXNOdW1iZXIsIG5vRW1wdHlPck51bGwgfSBmcm9tIFwiLi4vLi4vY29yZS92YWxpZGF0b3IvcHJvcGVydHktdmFsaWRhdG9yXCI7XHJcblxyXG4vKipcclxuICog56qX5Y+j5o6n5Lu257G777yM5Lmf5bCx5piv5pW05Liq5o6n5Lu255qE5qC45b+D56qX5Y+j57G7XHJcbiAqL1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBVSVdpbmRvdyBleHRlbmRzIENvbnRyb2w8VUlXaW5kb3dPcHRpb24+IGltcGxlbWVudHMgVUlDb250cm9sPFVJV2luZG93T3B0aW9uPiB7XHJcbiAgICAvKipcclxuICAgICAqIOWUr+S4gElkXHJcbiAgICAgKi9cclxuICAgIEBub0VtcHR5T3JOdWxsKClcclxuICAgIHB1YmxpYyByZWFkb25seSBpZDogc3RyaW5nO1xyXG4gICAgLyoqXHJcbiAgICAgKiDlrr3luqZcclxuICAgICAqL1xyXG4gICAgQGlzTnVtYmVyKGZhbHNlKVxyXG4gICAgcHVibGljIHdpZHRoOiBudW1iZXIgPSA4MDA7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDpq5jluqZcclxuICAgICAqL1xyXG4gICAgQGlzTnVtYmVyKGZhbHNlKVxyXG4gICAgcHVibGljIGhlaWdodDogbnVtYmVyID0gNjAwO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICog5p6E6YCg5Ye95pWw5Yid5aeL5YyWXHJcbiAgICAgKi9cclxuICAgIGNvbnN0cnVjdG9yKG9wdGlvbnM6IFVJV2luZG93T3B0aW9uKSB7XHJcbiAgICAgICAgc3VwZXIob3B0aW9ucyk7XHJcblxyXG4gICAgICAgIHRoaXMuaWQgPSBvcHRpb25zPy5pZCA/PyBcIlwiO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog5Yib5bu65o6n5Lu25YWD57Sg5a+56LGhXHJcbiAgICAgKi9cclxuICAgIHByZXNlbnQoKTogSFRNTEVsZW1lbnQge1xyXG4gICAgICAgIGNvbnN0IGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xyXG4gICAgICAgIGVsZW1lbnQuaWQgPSB0aGlzLmlkO1xyXG5cclxuICAgICAgICByZXR1cm4gZWxlbWVudDtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOWkhOeQhuWIneWni+S8oOWFpeWPguaVsFxyXG4gICAgICogQHBhcmFtIG9wdGlvbnMg5o6n5Lu25pSv5oyB5Lyg5YWl5Y+v6YCJ5Y+C5pWwXHJcbiAgICAgKi9cclxuICAgIGhhbmRsZXJPcHRpb25zKG9wdGlvbnM6IFVJV2luZG93T3B0aW9uKSB7XHJcbiAgICB9XHJcbn0iLCIvKipcclxuICog5oqb5Ye65byC5bi45o+Q56S6XHJcbiAqIEBwYXJhbSBtZXNzYWdlIFxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIGVycm9yKG1lc3NhZ2U6IHN0cmluZykge1xyXG4gICAgdGhyb3cgbmV3IEVycm9yKGBcXG7nsbvlnovvvJrnqIvluo/lvILluLhcXG7lvILluLjkv6Hmga/vvJoke21lc3NhZ2V9XFxu5aCG5qCI5L+h5oGv77yaYCk7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiDpqozor4HplJnor6/mj5DnpLpcclxuICogQHBhcmFtIG1lc3NhZ2Ug6ZSZ6K+v5L+h5oGvXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gdmFsaWRhdGVGYWlsKG1lc3NhZ2U6IHN0cmluZykge1xyXG4gICAgdGhyb3cgbmV3IEVycm9yKGBcXG7nsbvlnovvvJrpqozor4HplJnor69cXG7plJnor6/kv6Hmga/vvJoke21lc3NhZ2V9XFxu5aCG5qCI5L+h5oGv77yaYCk7XHJcbn0iLCJpbXBvcnQgeyB2YWxpZGF0ZUZhaWwsIGVycm9yIH0gZnJvbSBcIi4uL2V4Y2VwdGlvbi9leGNlcHRpb25cIjtcclxuXHJcbi8qKlxyXG4gKiDln7rnoYDnsbvlnovpqozor4FcclxuICogQHBhcmFtIHZhbHVlIOWAvFxyXG4gKiBAcGFyYW0gdHlwZSDlj6/pgInnsbvlnotcclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBiYXNlVHlwZVZhbGlkYXRvcih2YWx1ZTogYW55LCB0eXBlOiBcIm51bWJlclwiIHwgXCJzdHJpbmdcIiB8IFwiZnVuY3Rpb25cIiB8IFwiYXJyYXlcIikge1xyXG4gICAgbGV0IGNuVHlwZTogc3RyaW5nID0gXCJcIjtcclxuICAgIHN3aXRjaCAodHlwZSkge1xyXG4gICAgICAgIGNhc2UgXCJudW1iZXJcIjpcclxuICAgICAgICAgICAgY25UeXBlID0gXCLmlbDlrZdcIjtcclxuICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgY2FzZSBcInN0cmluZ1wiOlxyXG4gICAgICAgICAgICBjblR5cGUgPSBcIuWtl+espuS4slwiO1xyXG4gICAgICAgICAgICBicmVhaztcclxuICAgICAgICBjYXNlIFwiZnVuY3Rpb25cIjpcclxuICAgICAgICAgICAgY25UeXBlID0gXCLlh73mlbBcIjtcclxuICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgY2FzZSBcImFycmF5XCI6XHJcbiAgICAgICAgICAgIGNuVHlwZSA9IFwi5pWw57uEXCI7XHJcbiAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIGRlZmF1bHQ6IGVycm9yKFwi5a2Y5Zyo5pyq6K+G5Yir5Z+656GA57G75Z6LXCIpO1xyXG4gICAgfVxyXG5cclxuICAgIGlmICgodHlwZSAhPT0gXCJhcnJheVwiICYmIHR5cGVvZiB2YWx1ZSAhPT0gdHlwZSkgfHxcclxuICAgICAgICAodHlwZSA9PT0gXCJhcnJheVwiICYmICFBcnJheS5pc0FycmF5KHZhbHVlKSkpIHtcclxuICAgICAgICB2YWxpZGF0ZUZhaWwoYFxcYCR7dmFsdWV9XFxgIOS4jeaYr+S4gOS4quato+ehrueahCR7Y25UeXBlfeexu+Wei2ApO1xyXG4gICAgfVxyXG59XHJcbiIsImltcG9ydCB7IHZhbGlkYXRlRmFpbCB9IGZyb20gXCIuLi9leGNlcHRpb24vZXhjZXB0aW9uXCJcclxuaW1wb3J0IHsgYmFzZVR5cGVWYWxpZGF0b3IgfSBmcm9tIFwiLi9iYXNlLXZhbGlkYXRvclwiO1xyXG5cclxuLyoqXHJcbiAqIOWxnuaAp+mqjOivgee7n+S4gOWkhOeQhlxyXG4gKiBAcGFyYW0gc2V0SGFuZGxlciDpqozor4Hlp5TmiZjvvIzpqozor4HmiJDlip/ov5Tlm57mlrDlgLxcclxuICogQHBhcmFtIHR5cGVWYWxpZGF0b3Ig6buY6K6k57G75Z6L6aqM6K+B5ZmoXHJcbiAqL1xyXG5mdW5jdGlvbiBwcm9wZXJ0eVZhbGlkYXRvcihzZXRIYW5kbGVyOiAobmV3VmFsdWU6IGFueSwgcHJvcGVydHlLZXk6IHN0cmluZyB8IG51bWJlciB8IHN5bWJvbCkgPT4gYW55LCB0eXBlVmFsaWRhdG9yPzogKG5ld1ZhbHVlOiBhbnksIHByb3BlcnR5S2V5OiBzdHJpbmcgfCBudW1iZXIgfCBzeW1ib2wpID0+IHZvaWQpIHtcclxuICAgIHJldHVybiBmdW5jdGlvbiAodGFyZ2V0OiBhbnksIHByb3BlcnR5S2V5OiBzdHJpbmcgfCBudW1iZXIgfCBzeW1ib2wpIHtcclxuICAgICAgICBsZXQgdmFsdWUgPSB0YXJnZXRbcHJvcGVydHlLZXldO1xyXG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIHByb3BlcnR5S2V5LCB7XHJcbiAgICAgICAgICAgIGdldDogKCkgPT4gdmFsdWUsXHJcbiAgICAgICAgICAgIHNldDogKG5ld1ZhbHVlKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBpZiAodHlwZVZhbGlkYXRvcikgdHlwZVZhbGlkYXRvcihuZXdWYWx1ZSwgcHJvcGVydHlLZXkpO1xyXG5cclxuICAgICAgICAgICAgICAgIHZhbHVlID0gc2V0SGFuZGxlcihuZXdWYWx1ZSwgcHJvcGVydHlLZXkpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbn1cclxuXHJcbi8qKlxyXG4gKiDpqozor4HmmK/lkKbmmK/mlbDlrZfnsbvlnotcclxuICogQHBhcmFtIGFsbG93TWludXMg5YWB6K646LSf5pWw77yf6buY6K6k77yadHJ1ZVxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIGlzTnVtYmVyKGFsbG93TWludXM6IGJvb2xlYW4gPSB0cnVlKSB7XHJcbiAgICByZXR1cm4gcHJvcGVydHlWYWxpZGF0b3IobmV3VmFsdWUgPT4ge1xyXG4gICAgICAgIGlmIChhbGxvd01pbnVzKSByZXR1cm4gbmV3VmFsdWU7XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIGlmIChuZXdWYWx1ZSA9PT0gTWF0aC5hYnMobmV3VmFsdWUpKSByZXR1cm4gbmV3VmFsdWU7XHJcbiAgICAgICAgICAgIGVsc2UgdmFsaWRhdGVGYWlsKGDlj6rog73kvKDlhaXmraPlrp7mlbBgKTtcclxuICAgICAgICB9XHJcbiAgICB9LCBuZXdWYWx1ZSA9PiBiYXNlVHlwZVZhbGlkYXRvcihuZXdWYWx1ZSwgXCJudW1iZXJcIikpO1xyXG59XHJcblxyXG4vKipcclxuICog5pyA5bCP5YC86aqM6K+BXHJcbiAqIEBwYXJhbSBtaW5WYWx1ZSDmnIDlsI/lgLxcclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBtaW4obWluVmFsdWU6IG51bWJlcikge1xyXG4gICAgcmV0dXJuIHByb3BlcnR5VmFsaWRhdG9yKG5ld1ZhbHVlID0+IHtcclxuICAgICAgICBpZiAobmV3VmFsdWUgPj0gbWluVmFsdWUpIHJldHVybiBuZXdWYWx1ZTtcclxuICAgICAgICBlbHNlIHZhbGlkYXRlRmFpbChgXFxgJHtuZXdWYWx1ZX1cXGAg5LiN6IO95bCP5LqOIFxcYCR7bWluVmFsdWV9XFxgYCk7XHJcbiAgICB9LCBuZXdWYWx1ZSA9PiBiYXNlVHlwZVZhbGlkYXRvcihuZXdWYWx1ZSwgXCJudW1iZXJcIikpO1xyXG59XHJcblxyXG4vKipcclxuICog5pyA5aSn5YC86aqM6K+BXHJcbiAqIEBwYXJhbSBtaW5WYWx1ZSDmnIDlpKflgLxcclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBtYXgobWF4VmFsdWU6IG51bWJlcikge1xyXG4gICAgcmV0dXJuIHByb3BlcnR5VmFsaWRhdG9yKG5ld1ZhbHVlID0+IHtcclxuICAgICAgICBpZiAobmV3VmFsdWUgPD0gbWF4VmFsdWUpIHJldHVybiBuZXdWYWx1ZTtcclxuICAgICAgICBlbHNlIHZhbGlkYXRlRmFpbChgXFxgJHtuZXdWYWx1ZX1cXGAg5LiN6IO95aSn5LqOIFxcYCR7bWF4VmFsdWV9XFxgYCk7XHJcbiAgICB9LCBuZXdWYWx1ZSA9PiBiYXNlVHlwZVZhbGlkYXRvcihuZXdWYWx1ZSwgXCJudW1iZXJcIikpO1xyXG59XHJcblxyXG4vKipcclxuICog6ZW/5bqm6aqM6K+BXHJcbiAqIEBwYXJhbSBtaW5WYWx1ZSDmnIDlsI/lgLxcclxuICogQHBhcmFtIG1heFZhbHVlIOacgOWkp+WAvFxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIGxlbmd0aChtaW5WYWx1ZTogbnVtYmVyLCBtYXhWYWx1ZTogbnVtYmVyKSB7XHJcbiAgICByZXR1cm4gcHJvcGVydHlWYWxpZGF0b3IobmV3VmFsdWUgPT4ge1xyXG4gICAgICAgIGxldCB2YWx1ZUxlbmd0aCA9IG5ld1ZhbHVlLmxlbmd0aDtcclxuICAgICAgICBpZiAodmFsdWVMZW5ndGggPj0gbWluVmFsdWUgJiYgdmFsdWVMZW5ndGggPD0gbWF4VmFsdWUpIHJldHVybiBuZXdWYWx1ZTtcclxuICAgICAgICBlbHNlIHZhbGlkYXRlRmFpbChgXFxgJHtuZXdWYWx1ZX1cXGAg6ZW/5bqm5LiN5ZyoIFxcYFske21pblZhbHVlfSwke21heFZhbHVlfV1cXGAg5Yy66Ze0YCk7XHJcbiAgICB9LCBuZXdWYWx1ZSA9PiBiYXNlVHlwZVZhbGlkYXRvcihuZXdWYWx1ZSwgXCJzdHJpbmdcIikpO1xyXG59XHJcblxyXG4vKipcclxuICog5q2j5YiZ6KGo6L6+5byP5Yy56YWN6aqM6K+BXHJcbiAqIEBwYXJhbSByZWcg5q2j5YiZ6KGo6L6+5byPXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gbWF0Y2gocmVnOiBSZWdFeHApIHtcclxuICAgIHJldHVybiBwcm9wZXJ0eVZhbGlkYXRvcihuZXdWYWx1ZSA9PiB7XHJcbiAgICAgICAgaWYgKHJlZy50ZXN0KG5ld1ZhbHVlKSkgcmV0dXJuIG5ld1ZhbHVlO1xyXG4gICAgICAgIGVsc2UgdmFsaWRhdGVGYWlsKGBcXGAke25ld1ZhbHVlfVxcYCDkuI3og73ljLnphY3mraPliJnooajovr7lvI8gXFxgJHtyZWd9XFxgYCk7XHJcbiAgICB9LCBuZXdWYWx1ZSA9PiBiYXNlVHlwZVZhbGlkYXRvcihuZXdWYWx1ZSwgXCJzdHJpbmdcIikpO1xyXG59XHJcblxyXG4vKipcclxuICog5p6a5Li+5Y+v6YCJ5YC86aqM6K+BXHJcbiAqIEBwYXJhbSBlbnVtVmFsdWVzIOWPr+WPmOaemuS4vuWAvFxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIG9wdGlvbnMoLi4uZW51bVZhbHVlczogQXJyYXk8bnVtYmVyIHwgc3RyaW5nPikge1xyXG4gICAgcmV0dXJuIHByb3BlcnR5VmFsaWRhdG9yKG5ld1ZhbHVlID0+IHtcclxuICAgICAgICBpZiAoZW51bVZhbHVlcy5pbmRleE9mKG5ld1ZhbHVlKSA+IC0xKSByZXR1cm4gbmV3VmFsdWU7XHJcbiAgICAgICAgZWxzZSB2YWxpZGF0ZUZhaWwoYFxcYCR7bmV3VmFsdWV9XFxgIOS4jeWcqOWPr+mAieWAvCBcXGBbJHtlbnVtVmFsdWVzLnRvU3RyaW5nKCl9XVxcYCDlhoVgKTtcclxuICAgIH0pO1xyXG59XHJcblxyXG4vKipcclxuICog56m65a2X56ym5Liy5ZKMbnVsbOmqjOivgVxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIG5vRW1wdHlPck51bGwoKSB7XHJcbiAgICByZXR1cm4gcHJvcGVydHlWYWxpZGF0b3IoKG5ld1ZhbHVlLCBwcm9wZXJ0eUtleSkgPT4ge1xyXG4gICAgICAgIGlmIChuZXdWYWx1ZS50cmltKCkubGVuZ3RoID4gMCkgcmV0dXJuIG5ld1ZhbHVlO1xyXG4gICAgICAgIGVsc2UgdmFsaWRhdGVGYWlsKGBcXGAke3Byb3BlcnR5S2V5LnRvU3RyaW5nKCl9XFxgIOS4jeWFgeiuuOS4uuepuuWtl+espuaIlm51bGxgKTtcclxuICAgIH0sIG5ld1ZhbHVlID0+IGJhc2VUeXBlVmFsaWRhdG9yKG5ld1ZhbHVlLCBcInN0cmluZ1wiKSk7XHJcbn0iLCJpbXBvcnQgeyBHbG9iYWxPcHRpb24gfSBmcm9tIFwiLi9jb25zdHJhaW50XCI7XHJcbmltcG9ydCB7IFN1cHBvcnRMYW5ndWFnZSB9IGZyb20gXCIuL2VudW1cIjtcclxuaW1wb3J0IHsgb3B0aW9ucyB9IGZyb20gXCIuLi9jb3JlL3ZhbGlkYXRvci9wcm9wZXJ0eS12YWxpZGF0b3JcIjtcclxuaW1wb3J0IFVJV2luZG93IGZyb20gXCIuLi9jb250cm9sL3dpbmRvdy91aS13aW5kb3dcIjtcclxuaW1wb3J0IHsgVUlXaW5kb3dPcHRpb24gfSBmcm9tIFwiLi4vY29udHJvbC93aW5kb3cvY29uc3RyYWludFwiO1xyXG5cclxuLyoqXHJcbiAqIOWFpeWPo+WNleS+i+exu++8jOaJv+i9veedgOWFqOWxgOaVsOaNruWtmOWCqFxyXG4gKi9cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRW50cnkge1xyXG4gICAgLyoqXHJcbiAgICAgKiDniYjmnKzlj7dcclxuICAgICAqL1xyXG4gICAgcHVibGljIHJlYWRvbmx5IHZlcnNpb246IHN0cmluZyA9IFwiMy4wLjBcIjtcclxuXHJcbiAgICAvKipcclxuICAgICAqIOm7mOiupOivreiogFxyXG4gICAgICovXHJcbiAgICBAb3B0aW9ucyhTdXBwb3J0TGFuZ3VhZ2UuWkhfQ04sIFN1cHBvcnRMYW5ndWFnZS5FTl9VUylcclxuICAgIHB1YmxpYyBsYW5nOiBTdXBwb3J0TGFuZ3VhZ2UgPSBTdXBwb3J0TGFuZ3VhZ2UuWkhfQ047XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDnp4HmnInljJbmnoTpgKDlh73mlbDvvIzlrp7njrDljZXkvotcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBjb25zdHJ1Y3RvcihvcHRpb25zOiBHbG9iYWxPcHRpb24pIHtcclxuICAgICAgICB0aGlzLmhhbmRsZXJPcHRpb25zKG9wdGlvbnMpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog5omT5byA5paw56qX5Y+jXHJcbiAgICAgKiBAcGFyYW0gb3B0aW9ucyDlj6/pgInlj4LmlbBcclxuICAgICAqL1xyXG4gICAgb3BlbihvcHRpb25zOiBVSVdpbmRvd09wdGlvbik6IEhUTUxFbGVtZW50IHtcclxuICAgICAgICBjb25zdCB1aVdpbmRvdyA9IG5ldyBVSVdpbmRvdyhvcHRpb25zKTtcclxuICAgICAgICByZXR1cm4gdWlXaW5kb3cucHJlc2VudCgpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog6Z2Z5oCB5a6e5L6L5Y+Y6YePXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgc3RhdGljIGluc3RhbmNlOiBFbnRyeTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIOiOt+WPluWUr+S4gOWPr+eUqOWvueixoVxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgc3RhdGljIGdldEluc3RhbmNlKG9wdGlvbnM6IEdsb2JhbE9wdGlvbiA9IDxHbG9iYWxPcHRpb24+e30pOiBFbnRyeSB7XHJcbiAgICAgICAgaWYgKCF0aGlzLmluc3RhbmNlKSB7XHJcbiAgICAgICAgICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgRW50cnkob3B0aW9ucyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLmluc3RhbmNlLmhhbmRsZXJPcHRpb25zKG9wdGlvbnMpO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gdGhpcy5pbnN0YW5jZTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOWkhOeQhuS8oOWFpeWPguaVsFxyXG4gICAgICogQHBhcmFtIG9wdGlvbnMg5YWl5Y+j5Y+C5pWwXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgaGFuZGxlck9wdGlvbnMob3B0aW9uczogR2xvYmFsT3B0aW9uKSB7XHJcbiAgICAgICAgdGhpcy5sYW5nID0gb3B0aW9ucy5sYW5nIHx8IFN1cHBvcnRMYW5ndWFnZS5aSF9DTjtcclxuICAgIH1cclxufSIsImltcG9ydCB7IEVudHJ5T3ZlcnQsIEdsb2JhbE9wdGlvbiB9IGZyb20gXCIuL2FwcC9lbnRyeS9jb25zdHJhaW50XCI7XHJcbmltcG9ydCBFbnRyeSBmcm9tIFwiLi9hcHAvZW50cnkvZW50cnlcIjtcclxuXHJcbi8qKlxyXG4gKiDlr7nlpJblhazlvIDmlrnms5VcclxuICovXHJcbmZ1bmN0aW9uIG92ZXJ0KCk6IEVudHJ5T3ZlcnQge1xyXG4gICAgY29uc3QgZW50cnkgPSBFbnRyeS5nZXRJbnN0YW5jZSgpO1xyXG5cclxuICAgIGNvbnN0IGVudHJ5T3ZlcnQgPSA8RW50cnlPdmVydD5mdW5jdGlvbiAob3B0aW9uczogR2xvYmFsT3B0aW9uKTogdm9pZCB7XHJcbiAgICAgICAgRW50cnkuZ2V0SW5zdGFuY2Uob3B0aW9ucyk7XHJcbiAgICB9O1xyXG5cclxuICAgIGVudHJ5T3ZlcnQudmVyc2lvbiA9IGVudHJ5LnZlcnNpb247XHJcbiAgICBlbnRyeU92ZXJ0Lm9wZW4gPSBlbnRyeS5vcGVuO1xyXG5cclxuICAgIHJldHVybiBlbnRyeU92ZXJ0O1xyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBvdmVydCgpOyJdLCJzb3VyY2VSb290IjoiIn0=